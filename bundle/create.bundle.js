(()=>{var e={424:()=>{class e extends HTMLElement{constructor(){super(),this.render()}render(){this.innerHTML='\n      <div class="flex flex-col items-center gap-y-5">\n        <div class="flex items-center gap-2">\n          <span class="animate-ping inline-block size-3 bg-gray-900 rounded-full"></span>\n          <span class="animate-ping inline-block size-3 bg-gray-900 rounded-full"></span>\n          <span class="animate-ping inline-block size-3 bg-gray-900 rounded-full"></span>\n        </div>\n        <span class="text-gray-400 text-xs font-semibold md:text-sm">Please wait...</span>\n        <span class="sr-only">Loading...</span>\n      </div>\n    '}}customElements.define("loading-ping",e)},941:()=>{class e extends HTMLElement{constructor(){super(),this.setAttribute("class","container flex justify-between items-center h-[72px] mx-auto p-5"),this.render()}render(){}}customElements.define("nav-bar",e);class t extends HTMLElement{constructor(){super(),this.render()}render(){}}customElements.define("nav-left",t);class s extends HTMLElement{constructor(){super(),this.render()}render(){}}customElements.define("nav-right",s)}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}(()=>{"use strict";s(941),s(424);const e=(e,t)=>{switch(e){case"log":console.info({status:t.status,message:t.message});break;case"error":console.error({status:"unsuccessfull",message:"error"})}},t=async(t,s,n)=>{const a="https://notes-api.dicoding.dev/v2";switch(s){case"GET":const s=document.querySelector("main"),r=document.querySelector("loading-ping");s.setAttribute("class","container mx-auto p-5 min-h-dvh flex justify-center items-center"),r.setAttribute("class","block");try{const s=await fetch(a+t),n=await s.json();return e("log",n),n}catch(t){e("error")}finally{s.setAttribute("class","container mx-auto p-5 pt-[100px] min-h-dvh"),r.classList.replace("block","hidden")}break;case"POST":const l=n?{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}:{method:"POST"};try{const s=await fetch(a+t,l),n=await s.json();e("log",n)}catch(t){e("error")}break;case"DELETE":try{const s={method:"DELETE"},n=await fetch(a+t,s),r=await n.json();e("log",r)}catch(t){e("error")}}},n=document.querySelector("main"),a=document.querySelector("#form-notes"),r=document.querySelector("#submit"),l=document.querySelector("#input-title"),o=document.querySelector("#input-body"),i=document.querySelector("#char-count");l.addEventListener("input",(()=>{i.innerText=`${l.value.length}/120`,l.value.length>120?(r.setAttribute("disabled",""),r.classList.replace("text-gray-800","text-gray-300"),r.classList.remove("hover:bg-gray-200"),i.classList.replace("text-gray-300","text-red-600")):(r.removeAttribute("disabled"),r.classList.replace("text-gray-300","text-gray-800"),r.classList.add("hover:bg-gray-200"),i.classList.replace("text-red-600","text-gray-300"))}));const c=JSON.parse(localStorage.getItem("is-edit"));a.addEventListener("submit",(async e=>{if(e.preventDefault(),!l.value||!o.value)return alert("Please fill all the fields.");const s={title:l.value,body:o.value};if(c){const e=localStorage.getItem("note-page-id");await t(`/notes/${e}`,"DELETE")}await t("/notes","POST",s),window.location.href="../../../index.html"})),(async()=>{if(!c)return;const e=localStorage.getItem("note-page-id");a.setAttribute("class","hidden");const{data:s}=await t(`/notes/${e}`,"GET");n.setAttribute("class","container mx-auto p-5 pt-[100px] h-dvh max-h-dvh"),a.setAttribute("class","flex flex-col h-full"),l.value=s.title,o.value=s.body,i.innerText=`${l.value.length}/120`})()})()})();